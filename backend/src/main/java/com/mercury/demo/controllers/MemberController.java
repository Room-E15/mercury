package com.mercury.demo.controllers;

import com.mercury.demo.entities.Member;
import com.mercury.demo.entities.responses.MemberAddResponse;
import com.mercury.demo.repositories.MemberRepository;
import com.mercury.demo.repositories.SMSVerificationRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.HashMap;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/member") // This means URL's start with /demo (after Application path)
public class MemberController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private MemberRepository memberRepository;

    @Autowired
    private SMSVerificationRepository smsVerificationRepository;

    @PostMapping(path = "/addMember") // Map ONLY POST Requests
    public @ResponseBody HashMap<String, Object> addNewMember(@RequestParam String firstName,
                                                              @RequestParam String lastName,
                                                              @RequestParam String countryCode,
                                                              @RequestParam String phoneNumber
    ) {
        final MemberAddResponse[] response = new MemberAddResponse[1];

        smsVerificationRepository
                .findByPhoneNumberAndCountryCodeAndVerified(phoneNumber, countryCode, true)
                .ifPresentOrElse(
                        (verification) -> {
                            Member member = new Member(firstName, lastName, countryCode, phoneNumber);
                            System.out.println("Member: " + member);
                            member = memberRepository.save(member);
                            response[0] = new MemberAddResponse(member);
                        }, () -> {
                            response[0] = new MemberAddResponse("The phone number has not yet been verified.");
                        }
                );

        return response[0];
    }
}